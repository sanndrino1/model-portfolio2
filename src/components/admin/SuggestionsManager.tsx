'use client'

import * as React from "react"
import { Button, Card, Input, Dropdown, Modal, Badge } from "@/components/ui"
import { cn } from "@/lib/utils"

// –¢–∏–ø–æ–≤–µ –∑–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
interface Suggestion {
  id: string
  title: string
  description: string
  category: 'feature' | 'bug' | 'improvement' | 'design' | 'content'
  status: 'pending' | 'approved' | 'rejected' | 'in-progress' | 'completed'
  priority: 'low' | 'medium' | 'high' | 'critical'
  submittedBy: string
  submitterRole: 'user' | 'admin' | 'moderator' | 'client'
  submittedAt: string
  reviewedBy?: string
  reviewedAt?: string
  reviewNotes?: string
  estimatedHours?: number
  attachments?: string[]
}

// –ü—Ä–∏–º–µ—Ä–Ω–∏ –¥–∞–Ω–Ω–∏ –∑–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
const SUGGESTIONS: Suggestion[] = [
  {
    id: '1',
    title: '–î–æ–±–∞–≤—è–Ω–µ –Ω–∞ —Ç—ä–º–Ω–∞ —Ç–µ–º–∞',
    description: '–ü—Ä–µ–¥–ª–∞–≥–∞–º –¥–∞ —Å–µ –¥–æ–±–∞–≤–∏ –æ–ø—Ü–∏—è –∑–∞ —Ç—ä–º–Ω–∞ —Ç–µ–º–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç–∞ –∑–∞ –ø–æ-–¥–æ–±—Ä–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ –∏–∑–∂–∏–≤—è–≤–∞–Ω–µ –ø—Ä–µ–∑ –Ω–æ—â—Ç–∞.',
    category: 'feature',
    status: 'pending',
    priority: 'medium',
    submittedBy: 'maria.petrova@email.com',
    submitterRole: 'client',
    submittedAt: '2024-01-15',
    estimatedHours: 8
  },
  {
    id: '2',
    title: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –Ω–∞ –≥–∞–ª–µ—Ä–∏—è—Ç–∞',
    description: '–ì–∞–ª–µ—Ä–∏—è—Ç–∞ —Å–µ –∑–∞—Ä–µ–∂–¥–∞ –±–∞–≤–Ω–æ –ø—Ä–∏ –º–Ω–æ–≥–æ —Å–Ω–∏–º–∫–∏. –ü—Ä–µ–¥–ª–∞–≥–∞–º lazy loading –∏ –∫–æ–º–ø—Ä–µ—Å–∏—è –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ç–∞.',
    category: 'improvement',
    status: 'approved',
    priority: 'high',
    submittedBy: 'admin@site.com',
    submitterRole: 'admin',
    submittedAt: '2024-01-12',
    reviewedBy: '–ì–ª–∞–≤–µ–Ω —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
    reviewedAt: '2024-01-13',
    reviewNotes: '–û—Ç–ª–∏—á–Ω–∞ –∏–¥–µ—è, —â–µ –ø–æ–¥–æ–±—Ä–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–Ω–æ—Å—Ç—Ç–∞ –∑–Ω–∞—á–∏—Ç–µ–ª–Ω–æ.',
    estimatedHours: 40
  },
  {
    id: '3',
    title: '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —Ñ–æ—Ä–º–∞ –Ω–µ —Ä–∞–±–æ—Ç–∏',
    description: '–ü—Ä–∏ –∏–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ —Å–µ –ø–æ–∫–∞–∑–≤–∞ –≥—Ä–µ—à–∫–∞ 500. –ü—Ä–æ–±–ª–µ–º—ä—Ç —Å–µ –ø–æ—è–≤—è–≤–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ç–µ 2 –¥–Ω–∏',
    category: 'bug',
    status: 'approved',
    priority: 'critical',
    submittedBy: 'visitor@email.com',
    submittedAt: '2024-10-18T16:45:00Z',
    reviewedBy: 'admin@site.com',
    reviewedAt: '2024-10-18T17:00:00Z',
    reviewNotes: '–ö—Ä–∏—Ç–∏—á–µ–Ω –ø—Ä–æ–±–ª–µ–º - —Ç—Ä—è–±–≤–∞ –¥–∞ —Å–µ –ø–æ–ø—Ä–∞–≤–∏ —Å–ø–µ—à–Ω–æ',
    submitterRole: 'user'
  },
  {
    id: '4',
    title: '–ú–æ–±–∏–ª–Ω–∞ –≤–µ—Ä—Å–∏—è –Ω–∞ –≥–∞–ª–µ—Ä–∏—è—Ç–∞',
    description: '–ü–æ–¥–æ–±—Ä—è–≤–∞–Ω–µ –Ω–∞ –º–æ–±–∏–ª–Ω–∞—Ç–∞ –≤–µ—Ä—Å–∏—è –Ω–∞ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –≥–∞–ª–µ—Ä–∏—è—Ç–∞ —Å gesture –Ω–∞–≤–∏–≥–∞—Ü–∏—è',
    category: 'design',
    status: 'rejected',
    priority: 'low',
    submittedBy: 'designer@agency.com',
    submittedAt: '2024-10-10T11:00:00Z',
    reviewedBy: 'admin@site.com',
    reviewedAt: '2024-10-13T13:30:00Z',
    reviewNotes: '–í –º–æ–º–µ–Ω—Ç–∞ –º–æ–±–∏–ª–Ω–∞—Ç–∞ –≤–µ—Ä—Å–∏—è —Ä–∞–±–æ—Ç–∏ –¥–æ–±—Ä–µ. –©–µ –ø—Ä–µ—Ä–∞–∑–≥–ª–µ–¥–∞–º–µ –≤ –±—ä–¥–µ—â–µ.',
    submitterRole: 'client'
  },
  {
    id: '5',
    title: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å—ä—Å —Å–æ—Ü–∏–∞–ª–Ω–∏ –º—Ä–µ–∂–∏',
    description: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å–ø–æ–¥–µ–ª—è–Ω–µ –Ω–∞ –Ω–æ–≤–∏ —Å–Ω–∏–º–∫–∏ –≤ Instagram –∏ Facebook',
    category: 'feature',
    status: 'pending',
    priority: 'medium',
    submittedBy: 'marketing@company.com',
    submittedAt: '2024-10-17T08:15:00Z',
    submitterRole: 'client',
    estimatedHours: 80
  },
  {
    id: '6',
    title: '–î–æ–±–∞–≤—è–Ω–µ –Ω–∞ —Ñ–∏–ª—Ç—Ä–∏ –∑–∞ –≥–∞–ª–µ—Ä–∏—è—Ç–∞',
    description: '–í—ä–∑–º–æ–∂–Ω–æ—Å—Ç –∑–∞ —Ñ–∏–ª—Ç—Ä–∏–Ω–µ –Ω–∞ —Å–Ω–∏–º–∫–∏ –ø–æ –¥–∞—Ç–∞, –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∏ –∫–ª—é—á–æ–≤–∏ –¥—É–º–∏',
    category: 'feature',
    status: 'completed',
    priority: 'medium',
    submittedBy: 'client@model.com',
    submittedAt: '2024-09-25T12:00:00Z',
    reviewedBy: 'admin@site.com',
    reviewedAt: '2024-09-26T10:00:00Z',
    reviewNotes: '–ò–º–ø–ª–µ–º–µ–Ω—Ç–∏—Ä–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—è —ä–ø–¥–µ–π—Ç',
    submitterRole: 'client'
  }
]

interface SuggestionsManagerProps {
  className?: string
}

export function SuggestionsManager({ className }: SuggestionsManagerProps) {
  const [selectedStatus, setSelectedStatus] = React.useState<string>('all')
  const [selectedType, setSelectedType] = React.useState<string>('all')
  const [selectedPriority, setSelectedPriority] = React.useState<string>('all')
  const [selectedRole, setSelectedRole] = React.useState<string>('all')
  const [searchQuery, setSearchQuery] = React.useState('')
  const [selectedSuggestion, setSelectedSuggestion] = React.useState<Suggestion | null>(null)
  const [isDetailModalOpen, setIsDetailModalOpen] = React.useState(false)
  const [isReviewModalOpen, setIsReviewModalOpen] = React.useState(false)
  const [reviewNotes, setReviewNotes] = React.useState('')
  const [reviewAction, setReviewAction] = React.useState<'approve' | 'reject'>('approve')

  const statusFilters = [
    { value: 'all', label: '–í—Å–∏—á–∫–∏ —Å—Ç–∞—Ç—É—Å–∏', count: SUGGESTIONS.length },
    { value: 'pending', label: '–ß–∞–∫–∞—â–∏ –ø—Ä–µ–≥–ª–µ–¥', count: SUGGESTIONS.filter(s => s.status === 'pending').length },
    { value: 'approved', label: '–û–¥–æ–±—Ä–µ–Ω–∏', count: SUGGESTIONS.filter(s => s.status === 'approved').length },
    { value: 'rejected', label: '–û—Ç—Ö–≤—ä—Ä–ª–µ–Ω–∏', count: SUGGESTIONS.filter(s => s.status === 'rejected').length },
    { value: 'in-progress', label: '–í –ø—Ä–æ—Ü–µ—Å', count: SUGGESTIONS.filter(s => s.status === 'in-progress').length },
    { value: 'completed', label: '–ó–∞–≤—ä—Ä—à–µ–Ω–∏', count: SUGGESTIONS.filter(s => s.status === 'completed').length }
  ]

  const typeFilters = [
    { value: 'all', label: '–í—Å–∏—á–∫–∏ —Ç–∏–ø–æ–≤–µ' },
    { value: 'feature', label: '–ù–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç' },
    { value: 'improvement', label: '–ü–æ–¥–æ–±—Ä–µ–Ω–∏–µ' },
    { value: 'bug', label: '–ü—Ä–æ–±–ª–µ–º' },
    { value: 'design', label: '–î–∏–∑–∞–π–Ω' },
    { value: 'content', label: '–°—ä–¥—ä—Ä–∂–∞–Ω–∏–µ' }
  ]

  const priorityFilters = [
    { value: 'all', label: '–í—Å–∏—á–∫–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∏' },
    { value: 'critical', label: '–ö—Ä–∏—Ç–∏—á–µ–Ω' },
    { value: 'high', label: '–í–∏—Å–æ–∫' },
    { value: 'medium', label: '–°—Ä–µ–¥–µ–Ω' },
    { value: 'low', label: '–ù–∏—Å—ä–∫' }
  ]

  const roleFilters = [
    { value: 'all', label: '–í—Å–∏—á–∫–∏ —Ä–æ–ª–∏' },
    { value: 'user', label: 'üë§ –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª' },
    { value: 'admin', label: 'üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' },
    { value: 'moderator', label: 'üõ°Ô∏è –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä' },
    { value: 'client', label: 'üíº –ö–ª–∏–µ–Ω—Ç' }
  ]

  const filteredSuggestions = SUGGESTIONS.filter(suggestion => {
    const matchesStatus = selectedStatus === 'all' || suggestion.status === selectedStatus
    const matchesType = selectedType === 'all' || suggestion.category === selectedType
    const matchesPriority = selectedPriority === 'all' || suggestion.priority === selectedPriority
    const matchesSearch = suggestion.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         suggestion.description.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         suggestion.submittedBy.toLowerCase().includes(searchQuery.toLowerCase())
    return matchesStatus && matchesType && matchesPriority && matchesSearch
  })

  const getStatusBadge = (status: Suggestion['status']) => {
    const variants = {
      pending: 'warning',
      approved: 'success', 
      rejected: 'error',
      'in-progress': 'info',
      completed: 'success'
    } as const

    const labels = {
      pending: '–ß–∞–∫–∞ –ø—Ä–µ–≥–ª–µ–¥',
      approved: '–û–¥–æ–±—Ä–µ–Ω–æ',
      rejected: '–û—Ç—Ö–≤—ä—Ä–ª–µ–Ω–æ',
      'in-progress': '–í –ø—Ä–æ—Ü–µ—Å',
      completed: '–ó–∞–≤—ä—Ä—à–µ–Ω–æ'
    }

    return (
      <Badge variant={variants[status]}>
        {labels[status]}
      </Badge>
    )
  }

  const getPriorityBadge = (priority: Suggestion['priority']) => {
    const variants = {
      critical: 'error',
      high: 'warning',
      medium: 'info',
      low: 'secondary'
    } as const

    const labels = {
      critical: '–ö—Ä–∏—Ç–∏—á–µ–Ω',
      high: '–í–∏—Å–æ–∫',
      medium: '–°—Ä–µ–¥–µ–Ω',
      low: '–ù–∏—Å—ä–∫'
    }

    return (
      <Badge variant={variants[priority]} size="sm">
        {labels[priority]}
      </Badge>
    )
  }

  const getTypeIcon = (category: Suggestion['category']) => {
    const icons = {
      feature: '‚ú®',
      improvement: '‚ö°',
      bug: 'üêõ',
      design: 'üé®',
      content: 'üìù'
    }
    return icons[category] || 'üí°'
  }

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('bg-BG', {
      year: 'numeric',
      month: 'short',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    })
  }

  const handleSuggestionClick = (suggestion: Suggestion) => {
    setSelectedSuggestion(suggestion)
    setIsDetailModalOpen(true)
  }

  const handleReviewClick = (suggestion: Suggestion, action: 'approve' | 'reject') => {
    setSelectedSuggestion(suggestion)
    setReviewAction(action)
    setReviewNotes('')
    setIsReviewModalOpen(true)
  }

  const handleReviewSubmit = () => {
    if (!selectedSuggestion || !reviewNotes.trim()) return

    // –¢—É–∫ –±–∏ —Ç—Ä—è–±–≤–∞–ª–æ –¥–∞ —Å–µ –Ω–∞–ø—Ä–∞–≤–∏ API –∑–∞—è–≤–∫–∞ –∑–∞ –æ–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ —Å—Ç–∞—Ç—É—Å–∞
    console.log('Reviewing suggestion:', {
      id: selectedSuggestion.id,
      action: reviewAction,
      notes: reviewNotes
    })

    // –ó–∞—Ç–≤–∞—Ä—è–º–µ –º–æ–¥–∞–ª–∏—Ç–µ
    setIsReviewModalOpen(false)
    setIsDetailModalOpen(false)
    setSelectedSuggestion(null)
    setReviewNotes('')
  }

  return (
    <div className={cn("space-y-6", className)}>
      {/* Header */}
      <div className="flex flex-col gap-4 md:flex-row md:items-center md:justify-between">
        <div>
          <h1 className="text-3xl font-elegant font-semibold text-foreground">
            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
          </h1>
          <p className="text-muted-foreground">
            –û–¥–æ–±—Ä—è–≤–∞–Ω–µ –∏ –æ—Ç—Ö–≤—ä—Ä–ª—è–Ω–µ –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏
          </p>
        </div>
        
        <div className="flex items-center gap-3">
          <Button variant="outline" size="sm">
            üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
          </Button>
          <Button variant="primary" size="sm">
            üìù –ù–æ–≤–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
          </Button>
        </div>
      </div>

      {/* Stats Cards */}
      <div className="grid gap-4 md:grid-cols-4">
        <Card variant="default" className="p-4">
          <div className="flex items-center gap-3">
            <div className="w-10 h-10 bg-warning/10 rounded-lg flex items-center justify-center">
              <span className="text-warning text-lg">‚è≥</span>
            </div>
            <div>
              <div className="text-2xl font-bold text-foreground">
                {SUGGESTIONS.filter(s => s.status === 'pending').length}
              </div>
              <div className="text-sm text-muted-foreground">–ß–∞–∫–∞—â–∏ –ø—Ä–µ–≥–ª–µ–¥</div>
            </div>
          </div>
        </Card>

        <Card variant="default" className="p-4">
          <div className="flex items-center gap-3">
            <div className="w-10 h-10 bg-success/10 rounded-lg flex items-center justify-center">
              <span className="text-success text-lg">‚úÖ</span>
            </div>
            <div>
              <div className="text-2xl font-bold text-foreground">
                {SUGGESTIONS.filter(s => s.status === 'approved').length}
              </div>
              <div className="text-sm text-muted-foreground">–û–¥–æ–±—Ä–µ–Ω–∏</div>
            </div>
          </div>
        </Card>

        <Card variant="default" className="p-4">
          <div className="flex items-center gap-3">
            <div className="w-10 h-10 bg-error/10 rounded-lg flex items-center justify-center">
              <span className="text-error text-lg">‚ùå</span>
            </div>
            <div>
              <div className="text-2xl font-bold text-foreground">
                {SUGGESTIONS.filter(s => s.status === 'rejected').length}
              </div>
              <div className="text-sm text-muted-foreground">–û—Ç—Ö–≤—ä—Ä–ª–µ–Ω–∏</div>
            </div>
          </div>
        </Card>

        <Card variant="default" className="p-4">
          <div className="flex items-center gap-3">
            <div className="w-10 h-10 bg-info/10 rounded-lg flex items-center justify-center">
              <span className="text-info text-lg">üöÄ</span>
            </div>
            <div>
              <div className="text-2xl font-bold text-foreground">
                {SUGGESTIONS.filter(s => s.status === 'completed').length}
              </div>
              <div className="text-sm text-muted-foreground">–í–Ω–µ–¥—Ä–µ–Ω–∏</div>
            </div>
          </div>
        </Card>
      </div>

      {/* Filters */}
      <div className="flex flex-col gap-4 lg:flex-row lg:items-center">
        {/* Search */}
        <div className="flex-1 max-w-md">
          <Input
            placeholder="–¢—ä—Ä—Å–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è..."
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            className="w-full"
          />
        </div>
        
        {/* Filters */}
        <div className="flex flex-wrap gap-2">
          <Dropdown
            trigger={
              <Button variant="outline" size="sm">
                {statusFilters.find(f => f.value === selectedStatus)?.label || '–°—Ç–∞—Ç—É—Å'} ‚ñº
              </Button>
            }
            items={statusFilters.map(f => ({ value: f.value, label: f.label }))}
            onSelect={(value) => setSelectedStatus(value)}
          />
          
          <Dropdown
            trigger={
              <Button variant="outline" size="sm">
                {typeFilters.find(f => f.value === selectedType)?.label || '–¢–∏–ø'} ‚ñº
              </Button>
            }
            items={typeFilters}
            onSelect={(value) => setSelectedType(value)}
          />
          
          <Dropdown
            trigger={
              <Button variant="outline" size="sm">
                {priorityFilters.find(f => f.value === selectedPriority)?.label || '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç'} ‚ñº
              </Button>
            }
            items={priorityFilters}
            onSelect={(value) => setSelectedPriority(value)}
          />
        </div>
      </div>

      {/* Suggestions List */}
      <div className="space-y-3">
        {filteredSuggestions.map((suggestion) => (
          <Card
            key={suggestion.id}
            variant="default"
            className="p-4 hover:shadow-lg transition-all duration-200 cursor-pointer group"
            onClick={() => handleSuggestionClick(suggestion)}
          >
            <div className="flex items-center justify-between">
              <div className="flex items-center gap-4 flex-1">
                {/* Icon & Title */}
                <div className="flex items-center gap-3">
                  <div className="w-10 h-10 bg-primary/10 rounded-lg flex items-center justify-center group-hover:bg-primary/20 transition-colors">
                    <span className="text-lg">
                      {getTypeIcon(suggestion.category)}
                    </span>
                  </div>
                  <div>
                    <h3 className="font-semibold text-foreground group-hover:text-primary transition-colors">
                      {suggestion.title}
                    </h3>
                    <p className="text-sm text-muted-foreground line-clamp-1">
                      {suggestion.description}
                    </p>
                  </div>
                </div>

                {/* Metadata */}
                <div className="hidden md:flex items-center gap-4 text-sm text-muted-foreground">
                  <div>
                    <span className="font-medium">–û—Ç:</span> {suggestion.submittedBy}
                  </div>
                  <div>
                    <span className="font-medium">–î–∞—Ç–∞:</span> {formatDate(suggestion.submittedAt)}
                  </div>
                  {suggestion.category && (
                    <div>
                      <span className="font-medium">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</span> {suggestion.category}
                    </div>
                  )}
                </div>
              </div>

              {/* Status & Actions */}
              <div className="flex items-center gap-3">
                <div className="flex flex-col gap-2">
                  {getStatusBadge(suggestion.status)}
                  {getPriorityBadge(suggestion.priority)}
                </div>
                
                {suggestion.status === 'pending' && (
                  <div className="flex items-center gap-1 opacity-0 group-hover:opacity-100 transition-opacity">
                    <Button
                      variant="success"
                      size="sm"
                      onClick={(e) => {
                        e.stopPropagation()
                        handleReviewClick(suggestion, 'approve')
                      }}
                    >
                      ‚úì –û–¥–æ–±—Ä–∏
                    </Button>
                    <Button
                      variant="error"
                      size="sm"
                      onClick={(e) => {
                        e.stopPropagation()
                        handleReviewClick(suggestion, 'reject')
                      }}
                    >
                      ‚úó –û—Ç—Ö–≤—ä—Ä–ª–∏
                    </Button>
                  </div>
                )}
              </div>
            </div>

            {/* Mobile metadata */}
            <div className="md:hidden mt-3 pt-3 border-t border-muted flex items-center justify-between text-xs text-muted-foreground">
              <span>{suggestion.submittedBy}</span>
              <span>{formatDate(suggestion.submittedAt)}</span>
            </div>
          </Card>
        ))}
      </div>

      {/* Detail Modal */}
      <Modal
        isOpen={isDetailModalOpen}
        onClose={() => setIsDetailModalOpen(false)}
        title={selectedSuggestion?.title}
        size="lg"
      >
        {selectedSuggestion && (
          <div className="space-y-6">
            {/* Status & Priority */}
            <div className="flex items-center gap-4">
              {getStatusBadge(selectedSuggestion.status)}
              {getPriorityBadge(selectedSuggestion.priority)}
              <span className="text-sm text-muted-foreground">
                {getTypeIcon(selectedSuggestion.category)} {selectedSuggestion.category}
              </span>
            </div>

            {/* Description */}
            <div>
              <h4 className="font-semibold mb-2">–û–ø–∏—Å–∞–Ω–∏–µ</h4>
              <p className="text-muted-foreground">{selectedSuggestion.description}</p>
            </div>

            {/* Metadata */}
            <div className="grid grid-cols-2 gap-4 text-sm">
              <div>
                <span className="font-medium text-muted-foreground">–ü–æ–¥–∞–¥–µ–Ω–æ –æ—Ç:</span>
                <p className="mt-1">{selectedSuggestion.submittedBy}</p>
              </div>
              <div>
                <span className="font-medium text-muted-foreground">–î–∞—Ç–∞ –Ω–∞ –ø–æ–¥–∞–≤–∞–Ω–µ:</span>
                <p className="mt-1">{formatDate(selectedSuggestion.submittedAt)}</p>
              </div>
              {selectedSuggestion.category && (
                <div>
                  <span className="font-medium text-muted-foreground">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</span>
                  <p className="mt-1">{selectedSuggestion.category}</p>
                </div>
              )}
              {selectedSuggestion.estimatedHours && (
                <div>
                  <p className="text-sm font-medium text-muted-foreground">–û—Ü–µ–Ω–µ–Ω–æ –≤—Ä–µ–º–µ:</p>
                  <p className="mt-1">{selectedSuggestion.estimatedHours} —á–∞—Å–∞</p>
                </div>
              )}
            </div>

            {/* Review Info */}
            {selectedSuggestion.reviewedBy && (
              <div className="p-4 bg-muted/30 rounded-lg">
                <h4 className="font-semibold mb-2">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –ø—Ä–µ–≥–ª–µ–¥–∞</h4>
                <div className="space-y-2 text-sm">
                  <div>
                    <span className="font-medium">–ü—Ä–µ–≥–ª–µ–¥–∞–Ω–æ –æ—Ç:</span> {selectedSuggestion.reviewedBy}
                  </div>
                  <div>
                    <span className="font-medium">–î–∞—Ç–∞ –Ω–∞ –ø—Ä–µ–≥–ª–µ–¥–∞:</span> {formatDate(selectedSuggestion.reviewedAt!)}
                  </div>
                  {selectedSuggestion.reviewNotes && (
                    <div>
                      <span className="font-medium">–ë–µ–ª–µ–∂–∫–∏:</span>
                      <p className="mt-1 text-muted-foreground">{selectedSuggestion.reviewNotes}</p>
                    </div>
                  )}
                </div>
              </div>
            )}

            {/* Actions */}
            {selectedSuggestion.status === 'pending' && (
              <div className="flex gap-3 pt-4 border-t">
                <Button 
                  variant="success"
                  onClick={() => handleReviewClick(selectedSuggestion, 'approve')}
                >
                  ‚úì –û–¥–æ–±—Ä–∏
                </Button>
                <Button 
                  variant="error"
                  onClick={() => handleReviewClick(selectedSuggestion, 'reject')}
                >
                  ‚úó –û—Ç—Ö–≤—ä—Ä–ª–∏
                </Button>
              </div>
            )}
          </div>
        )}
      </Modal>

      {/* Review Modal */}
      <Modal
        isOpen={isReviewModalOpen}
        onClose={() => setIsReviewModalOpen(false)}
        title={`${reviewAction === 'approve' ? '–û–¥–æ–±—Ä—è–≤–∞–Ω–µ' : '–û—Ç—Ö–≤—ä—Ä–ª—è–Ω–µ'} –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ`}
        size="md"
      >
        <div className="space-y-4">
          <div className="p-4 bg-muted/20 rounded-lg">
            <h4 className="font-semibold mb-1">{selectedSuggestion?.title}</h4>
            <p className="text-sm text-muted-foreground">{selectedSuggestion?.description}</p>
          </div>

          <div>
            <label className="block text-sm font-medium mb-2">
              –ë–µ–ª–µ–∂–∫–∏ –∑–∞ –ø—Ä–µ–≥–ª–µ–¥–∞ {reviewAction === 'reject' && <span className="text-error">*</span>}
            </label>
            <textarea
              value={reviewNotes}
              onChange={(e) => setReviewNotes(e.target.value)}
              placeholder={reviewAction === 'approve' 
                ? '–î–æ–±–∞–≤–µ—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä –∑–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ—Ç–æ...' 
                : '–û–±—è—Å–Ω–µ—Ç–µ –∑–∞—â–æ –æ—Ç—Ö–≤—ä—Ä–ª—è—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ—Ç–æ...'
              }
              className="w-full min-h-[100px] p-3 border border-muted rounded-lg bg-background text-foreground placeholder-muted-foreground focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent resize-vertical"
            />
          </div>

          <div className="flex gap-3 pt-4">
            <Button 
              variant={reviewAction === 'approve' ? 'success' : 'error'}
              onClick={handleReviewSubmit}
              disabled={!reviewNotes.trim()}
            >
              {reviewAction === 'approve' ? '‚úì –û–¥–æ–±—Ä–∏' : '‚úó –û—Ç—Ö–≤—ä—Ä–ª–∏'}
            </Button>
            <Button 
              variant="outline"
              onClick={() => setIsReviewModalOpen(false)}
            >
              –û—Ç–∫–∞–∑
            </Button>
          </div>
        </div>
      </Modal>

      {/* Empty State */}
      {filteredSuggestions.length === 0 && (
        <div className="text-center py-12">
          <div className="w-16 h-16 bg-muted/50 rounded-full flex items-center justify-center mx-auto mb-4">
            <span className="text-2xl">üí°</span>
          </div>
          <h3 className="text-lg font-semibold text-foreground mb-2">
            –ù—è–º–∞ –Ω–∞–º–µ—Ä–µ–Ω–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
          </h3>
          <p className="text-muted-foreground mb-4">
            –û–ø–∏—Ç–∞–π—Ç–µ —Å —Ä–∞–∑–ª–∏—á–Ω–∏ —Ñ–∏–ª—Ç—Ä–∏ –∏–ª–∏ –∏–∑—á–∞–∫–∞–π—Ç–µ –Ω–æ–≤–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
          </p>
          <Button 
            variant="outline" 
            onClick={() => {
              setSearchQuery('')
              setSelectedStatus('all')
              setSelectedType('all')
              setSelectedPriority('all')
            }}
          >
            –ò–∑—á–∏—Å—Ç–∏ —Ñ–∏–ª—Ç—Ä–∏—Ç–µ
          </Button>
        </div>
      )}
    </div>
  )
}

export default SuggestionsManager